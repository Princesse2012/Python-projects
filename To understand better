alphabets = ["a", "b", "c", "d", "e"]
word = list(range(0)) + alphabets
print(word)
#######################
word = ""
counter = 0
letters = ["c", "a", "r"]
while counter < len(letters):
  word = word + letters[counter]
  counter = counter + 1
print(word)
#############
result = 0
numbers = [2, 4, 6]
for num in numbers:
  result = result + num
print(result)
####################################
letters = ["beach", "car"]
funified = list(map(lambda word: f"{word} is fun!", letters))
print(funified)
##############################################
fruits = ["apple", "pear", "cherry"]
print(fruits[-1])
££££££££££££££££££££££££££££££££££££££££
if 1:
    print("1 is truthy!")
else:
    print("???")
    #####
if False:
    print("Nissan")
elif True:
    print("Ford")
elif True:
    print("BMW")
else:
    print("Audi")
    
  ##########
  if True:
    print("wow awesome")
else:
    print("Oh Damn !!")
###########################################
languages = ["spanish"]
languages.extend(["chinese", "polish"])
print(languages)
################################
print(bool("Australia"))
nums = [1, 2, 3, 4, 1, 4, 1]
print(nums.count(1))
#################################
Which of the following will print the total numbers of 'A' in the word: "HOW ARE YOU"?
word =  "HOW ARE YOU"
print(word.count('A'))
#######################
What does the following code print?

stuff = ("mobile", "pen", "mobile")
print(stuff.count("mobile"))
#############################
from functools import reduce
 
nums = [
    [2, 2, 13, 15],
    [30, 45],
]
 
res = []
 
for i in nums:
    r = reduce(lambda x, y: x + y, i)
    res.append(r)
 
print(res)

########################################
nums = [3, 5, 16, 27]
some_nums = list(filter(lambda num: num < 10, nums))
print(some_nums)
##################################################
def funA(a):
    return a
def funB(b):
   return b * 2
def funC(c):
   return c + 3
x = funA(funB(funC(1)))
print(x)

##########################
dress = ("sock", "shirt", "hat")
dress[0] = "pants"
print(dress)
##########################
What is a correct syntax to return the first character in a string?
x ="Hello"[0]
x = "Hello".sub(0,1)
###################################
print(0xA + 0xB + 0xC)
What code will give msn  in output? 

a= "Zimbabve"
b= "Australia"
c= "Canada"
print(a[2]+b[2]+c[2]
################################
stuff = [
    ["aa", "bbb", "c", "d"],
    ["eeeee", "ff"],
]
 
biggest = ""
 
for i in stuff:
    for j in i:
        biggest = biggest if len(biggest) > len(j) else j
 
print(biggest)
################################
num_of_nums = int(input(
         "How many numbers do you want to average? "))

sum = 0.0
for count in range (num_of_nums):
         value = int(input("Enter a value: "))
         sum = sum + value

average = sum / num_of_nums
print ("The average is:", average)

###################################
num_of_nums = int(input(
         "How many numbers do you want to average? "))

sum = 0.0
for count in range (num_of_nums, 0, -1):
         value = int(input("Enter a value: "))
         sum = sum + value

average = sum / num_of_nums
print ("The average is:", average)
################################
Nesting Loops
Print the multiplication table for all the numbers between 0 and 10
for i in range(0, 10):
         print ("~~~", i, "~~~")
         for j in range(0, 10):
                   print (i*j)
         print ( )
Compound Conditions
while answer == 'y' or 'Y':
The correct version of this code looks like this:

while answer == 'y' or answer == 'Y':
#############################################
for number in range(1, 11):
         if number == 4:
                   break
         print (number)
print ("Thanks!")
for number in range(1, 11):
         if number == 4:
                   continue
         print (number)
print ("Thanks!")
##############################################
for number in range(1, 11):
         if number == 4:
                   continue
         print (number)
else:
         print ("Exited normally")
 ############################################
#You then want your program to determine if that letter is somewhere in the phrase and report this to the user
 phrase = input("Enter a phrase: ")
letter = input("Enter a letter: ")
length = len(phrase)

for index in range(0, length):
         if phrase [index] == letter:
                   print ("The letter first appears at index: ", index)
                   break
else:
         print ("Your letter wasn't found")
############################################
Write a program that reads in a list of numbers from the users and displays the sum and average of this list. 
Your program should enable the users to enter as many numbers as they wish. 
When the users are finished entering numbers, they'll enter the value -1. 
Be sure not to include the -1 in your calculations for the sum and average.
Question 1, Incorrect, Multiple Choice
####################################################
What type of loop uses a variable to keep track of the number of times the loop body should execute?
Counter controlled loop.
Which of the following compound conditions will evaluate to true even when the value in the choice variable is "N"?
choice == "Y" or "y"
###################################################
there are only three control structures that any programming language uses: sequence, decisions, and loops.
ou've used two already: input and range. Functions are useful because they enable you to organize and make your code more modular
